// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vasiliy-t/gotrain/iface/mocking/redis_client (interfaces: RedisClient)

package mock_redis_client

import (
	time "time"

	gomock "github.com/golang/mock/gomock"
	redis_v4 "gopkg.in/redis.v4"
)

// Mock of RedisClient interface
type MockRedisClient struct {
	ctrl     *gomock.Controller
	recorder *_MockRedisClientRecorder
}

// Recorder for MockRedisClient (not exported)
type _MockRedisClientRecorder struct {
	mock *MockRedisClient
}

func NewMockRedisClient(ctrl *gomock.Controller) *MockRedisClient {
	mock := &MockRedisClient{ctrl: ctrl}
	mock.recorder = &_MockRedisClientRecorder{mock}
	return mock
}

func (_m *MockRedisClient) EXPECT() *_MockRedisClientRecorder {
	return _m.recorder
}

func (_m *MockRedisClient) Get(_param0 string) *redis_v4.StringCmd {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(*redis_v4.StringCmd)
	return ret0
}

func (_mr *_MockRedisClientRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockRedisClient) Set(_param0 string, _param1 interface{}, _param2 time.Duration) *redis_v4.StatusCmd {
	ret := _m.ctrl.Call(_m, "Set", _param0, _param1, _param2)
	ret0, _ := ret[0].(*redis_v4.StatusCmd)
	return ret0
}

func (_mr *_MockRedisClientRecorder) Set(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Set", arg0, arg1, arg2)
}
